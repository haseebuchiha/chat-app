name: 'chat-app'
services:
  db:
    image: 'postgres:14.5-alpine'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - 'db:/var/lib/postgresql/data'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - 'pg_isready -U postgres'

  redis:
    image: 'redis:6.2-alpine'
    command: redis-server
    volumes:
      - 'redis:/data'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - 'redis-cli ping'
  app:
    depends_on:
      api:
        condition: service_healthy
    build:
      context: ./webapp
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    environment:
      PORT: 80
    volumes:
      - './webapp:/app'
      - '/app/node_modules'
  api:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailcatcher:
        condition: service_healthy
    build:
      context: ./
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    environment:
      PORT: 80
    healthcheck:
      test: [ "CMD", "curl", "http://localhost/health_check" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s
    env_file:
      - .env
    command: [ 'bundle', 'exec', 'puma' ]
    ports:
      - '8000:80'
    volumes:
      - './:/app'
      - '/app/.git'
      - '/app/vendor/bundle'
      - '/app/webapp'
  mailcatcher:
    image: 'dockage/mailcatcher'
    ports:
      - '1081:1080'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - 'wget -O /dev/null -q http://localhost:1080'

volumes:
  redis:
  db:
